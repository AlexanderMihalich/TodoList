{"version":3,"sources":["components/TodoForm.js","components/Todo.js","AppTodo.js","index.js"],"names":["TodoForm","props","useState","text","setText","className","onSubmit","e","preventDefault","length","id","Math","floor","random","type","placeholder","onChange","target","value","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","map","todo","isComplete","onClick","AppTodo","setTodos","filterIsCompleted","filter","item","newTodos","removeArr","removeCompleted","todoId","newValue","prev","updateTodos","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4939998b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst TodoForm = (props) => {\r\n\r\n\tconst [text, setText] = useState(\"\")\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetText(e.target.value)\r\n\t}\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (text.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tprops.onSubmit({\r\n\t\t\tid: Math.floor(Math.random() * 1000),\r\n\t\t\ttext: text\r\n\t\t})\r\n\t\tsetText('')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className=\"todo__form\" onSubmit={handleSubmit}>\r\n\t\t\t<input type=\"text\" placeholder=\"Write Todo\" className=\"todo__input\" onChange={handleChange} value={text} />\r\n\t\t\t<button className=\"todo__btn\" >Add</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default TodoForm\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { MdDeleteForever } from 'react-icons/md'\r\nimport { BiMessageSquareEdit } from 'react-icons/bi'\r\n\r\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\r\n\tconst [edit, setEdit] = useState({\r\n\t\tid: null,\r\n\t\tvalue: ''\r\n\t})\r\n\tconst submitUpdate = value => {\r\n\t\tupdateTodo(edit.id, value)\r\n\t\tsetEdit({\r\n\t\t\tid: null,\r\n\t\t\tvalue: ''\r\n\t\t})\r\n\t}\r\n\r\n\tif (edit.id) {\r\n\t\treturn <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"todo__list\">\r\n\t\t\t{todos.map(todo =>\r\n\t\t\t\t<li className={todo.isComplete ? 'complete' : ' '} key={todo.id}>\r\n\t\t\t\t\t<span className=\"complete__text\" key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n\t\t\t\t\t\t{todo.text}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<button onClick={() => setEdit({ id: todo.id, value: todo.text })} className=\"todo__linkBtn\" ><span>update</span><BiMessageSquareEdit /></button>\r\n\t\t\t\t\t\t<button onClick={() => removeTodo(todo.id)} className=\"todo__linkBtn\"><span>delete</span><MdDeleteForever /></button>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t\t}\r\n\t\t</div >\r\n\t)\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react'\nimport Todo from './components/Todo';\nimport TodoForm from './components/TodoForm';\n\nconst AppTodo = () => {\n\n\tconst [todos, setTodos] = useState([])\n\n\tconst addTodo = todo => {\n\t\tif (!todo.text.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst newTodos = [todo, ...todos]\n\t\tsetTodos(newTodos)\n\t}\n\tconst removeTodo = id => {\n\t\tconst removeArr = [...todos].filter(todo => todo.id !== id)\n\t\tsetTodos(removeArr)\n\t}\n\tlet removeCompleted = () => {\n\t\tconst removeArr = todos.filter(todo => !todo.isComplete);\n\t\tsetTodos(removeArr)\n\t}\n\tconst updateTodo = (todoId, newValue) => {\n\t\tif (!newValue.text.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tsetTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\n\t}\n\tconst completeTodo = id => {\n\t\tlet updateTodos = todos.map(todo => {\n\t\t\tif (todo.id === id) {\n\t\t\t\ttodo.isComplete = !todo.isComplete\n\t\t\t}\n\t\t\treturn todo\n\t\t})\n\t\tsetTodos(updateTodos)\n\t}\n\tconst filterIsCompleted = todos.filter(item => item.isComplete === true).length\n\n\treturn (\n\t\t<main className=\"wrapper\">\n\t\t\t<div className=\"todo\">\n\t\t\t\t<h1 className=\"todo__title\">Left to complete {!todos.length ? null : todos.length}</h1>\n\t\t\t\t<TodoForm onSubmit={addTodo} />\n\t\t\t\t<div className=\"todo__completed completed\">\n\t\t\t\t\t<h2 className=\"completed__fulfilled\">Completed {!filterIsCompleted ? null : filterIsCompleted}</h2>\n\t\t\t\t\t<button className=\"completed__btn\" onClick={() => removeCompleted()} >Clear completed</button>\n\t\t\t\t</div>\n\t\t\t\t<Todo todos={todos} removeTodo={removeTodo} updateTodo={updateTodo} completeTodo={completeTodo} />\n\t\t\t</ div>\n\t\t</main>\n\t);\n}\n\nexport default AppTodo;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/null.scss';\nimport './assets/css/index.scss';\nimport App from './AppTodo';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}